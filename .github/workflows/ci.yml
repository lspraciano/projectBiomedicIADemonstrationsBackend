name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    environment: prod

    env:
      BIOIADEMON_APP_RUNNING_MODE: production
      BIOIADEMON_DB_URL: ${{ secrets.BIOIADEMON_DB_URL }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}

    services:
      db:
        image: postgres:15.2
        env:
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11.2'

      - name: Install Poetry
        run: pip install poetry

      - name: Configure Poetry
        run: |
          poetry config virtualenvs.create true

      - name: Install dependencies (Poetry)
        run: poetry install --no-root

      - name: Apply DB migrations (opcional)
        run: |
          poetry run alembic upgrade head
        env:
          BIOIADEMON_DB_URL: ${{ env.BIOIADEMON_DB_URL }}

#      - name: Run tests
#        run: |
#          poetry run pytest --maxfail=1 --disable-warnings
#        env:
#          DATABASE_URL: ${{ env.DB_URL }}

      - name: Build Docker image (opcional)
        run: |
          docker build \
            -f docker/Dockerfile.api \
            -t lspraciano/project-biomedic-ia-demonstrationsBackend:${{ github.sha }} \
            .
